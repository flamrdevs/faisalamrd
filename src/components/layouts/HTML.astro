---
export interface Props {
  title?: string;
}

const { title = "faisalamrd" } = Astro.props;

import "~/assets/css/index.css";
---

<!DOCTYPE html>
<html id="html" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={title} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Nunito:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />

    <script is:inline>
      const DARK_THEME_KEY = "dark-theme";

      window.getStorageDarkTheme = function (defaultValue) {
        const item = localStorage.getItem(DARK_THEME_KEY);
        if (typeof item === "string") {
          try {
            return JSON.parse(item);
          } catch (error) {
            console.error(error);
            return defaultValue;
          }
        } else {
          return defaultValue;
        }
      };

      window.setStorageDarkTheme = function (value) {
        try {
          localStorage.setItem(DARK_THEME_KEY, JSON.stringify(value));
        } catch (error) {
          console.error(error);
        }
        return value;
      };

      window.getInitialDarkTheme = function () {
        return typeof window !== "undefined" && window.matchMedia("(prefers-color-scheme: dark)").matches;
      };

      window.setDocumentDarkTheme = function (dark) {
        document.getElementById("html").classList[dark ? "add" : "remove"]("dark");
      };
    </script>

    <script is:inline>
      window.setDocumentDarkTheme(window.getStorageDarkTheme(window.getInitialDarkTheme()));
    </script>
  </head>

  <body class="relative">
    <slot />
  </body>

  <script>
    document.querySelector("body").addEventListener("contextmenu", (event) => {
      event.preventDefault();
    });
  </script>
</html>
